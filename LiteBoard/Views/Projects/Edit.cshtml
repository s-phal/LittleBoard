@using Microsoft.AspNetCore.Identity;
@model LiteBoard.Models.Project
@inject UserManager<Member> userManager

@{
    ViewData["Title"] = "Edit";
}

<form asp-action="Edit">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="Notes" />
    <div class="bg-white mt-5 mx-auto w-50 rounded-5 p-5">
        <div class="mx-auto text-center">
            <h2 class="fs-3">Edit Your Project</h2>
        </div>
        <div class="mb-3">
          <label for="formGroupExampleInput" class="form-label">Title</label>
			<input asp-for="Title" class="form-control is-valid" id="validationInputArea" onkeyup="checkInput()" onfocus="checkInput()" onfocusout="checkInput()" required />
        </div>
        <div class="mb-3">
          <label for="formGroupExampleInput2" class="form-label">Description</label>
			<textarea name="Description" class="form-control is-valid" rows="7" id="validationTextArea" onkeyup="checkText()" onfocus="checkText()" onfocusout="checkInput()" required>@Model.Description</textarea>
        </div>
        <input hidden type="text" id="MemberId" name="MemberId" value="@userManager.GetUserId(User)" />
        <div class="mt-4">
			<Button type="submit" class="btn btn-info text-white me-2 disabled-1 disabled-2" id="addProjectButton">Update</Button>
            <a asp-action="Index">Cancel</a>
        </div>
    </div>
</form>


<script>
	const input = document.querySelector("#validationInputArea");
	const text = document.querySelector("#validationTextArea");
	const addProjectButton = document.querySelector("#addProjectButton");

	function checkInput() {
		var value = document.getElementById("validationInputArea").value;

		if (value.length < 5) {
			input.classList.remove("is-valid");
			input.classList.add("is-invalid");
			addProjectButton.classList.add("disabled-1")

		}
		else if (value.length > 35) {
			input.classList.remove("is-valid");
			input.classList.add("is-invalid");
			addProjectButton.classList.add("disabled-1")
		}
		else {
			input.classList.add("is-valid");
			input.classList.remove("is-invalid");
			addProjectButton.classList.remove("disabled-1")
		}
	}

	function checkText() {
		var value2 = document.getElementById("validationTextArea").value;

		if (value2.length < 15) {
			text.classList.remove("is-valid");
			text.classList.add("is-invalid");
			addProjectButton.classList.add("disabled-2")

		}
		else if (value2.length > 80) {
			text.classList.remove("is-valid");
			text.classList.add("is-invalid");
			addProjectButton.classList.add("disabled-2")

		}
		else {
			text.classList.add("is-valid");
			text.classList.remove("is-invalid");
			addProjectButton.classList.remove("disabled-2")
		}
	}
</script>