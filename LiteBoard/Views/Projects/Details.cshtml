@using LiteBoard.Data;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
@model LiteBoard.Models.Project
@inject UserManager<Member> userManager;
@inject ApplicationDbContext _context;


@{
	
	ViewData["Title"] = "Details";
	string showCheckMark = "checked";
	string disableInputField = "disabled";
	string textStrike = "text-grey text-decoration-line-through";
	
	var displayMessage = "";
	if (TempData.ContainsKey("DisplayMessage"))
	{
		displayMessage = TempData["DisplayMessage"].ToString();
	}


}
						

<div class="row mt-5">
	<div class="MAIN col-lg-9">
		<div class="row">
			<div class="BREADCRUMBS d-md-flex align-items-end mb-2">
				<h2 class="me-auto text-grey fs-6 small"><a href="/projects" class="text-decoration-none text-grey">My Projects</a> / @Model.Title</h2>
				@{
					var memberExist = _context.ProjectMember.Where(p => p.ProjectId == Model.Id && p.MemberId == userManager.GetUserId(User)).FirstOrDefault();
					
				}
				@if (memberExist != null)
				{
				<a class="btn btn-info text-white me-2" href="/projects/edit/@Model.Id">Edit Project</a>					
				}

				@if(Model.MemberId == userManager.GetUserId(User))
				{
					<!-- Button trigger modal -->
					<button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
						Delete Project
					</button>

					<!-- Modal -->
					<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
						<div class="modal-dialog">
							<div class="modal-content">
								<div class="modal-header border-0">
									<h1 class="modal-title fs-5" id="staticBackdropLabel">Confirm Delete</h1>
								</div>
								<div class="modal-body border-0">
									Are you sure you want to delete this project?
							
								</div>
								<div class="modal-footer border-0">
									<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
									<form asp-controller="projects" asp-action="Delete">
										<input type="hidden" name="id" value="@Model.Id" />
										<input type="hidden" name="MemberId" value="@Model.MemberId" />
										<button type="submit" class="btn btn-danger text-white me-2">Delete Project</button>
									</form>
								</div>
							</div>
						</div>
					</div>
				}
			</div>
			<div class="LEFT-MAIN col-65 mt-3">
			<div class="TASK-LABEL mb-4">
					<h2 class="me-auto text-black opacity-50 text-uppercase fw-bold fs-6">
						Tasks
					</h2>
				</div>
			<!--Create Task Start-->
			<div class="CREATE-TASK p-2 mb-4 bg-white shadow-sm nunito rounded-3">
				<h5 class="text-dark border-start border-3 border-info fs-5 ps-4 details-margin-left">
					<form asp-controller="chores" asp-action="CreateTask">
						<div asp-validation-summary="ModelOnly" class="text-danger"></div>
						<input type="hidden" name="ProjectId" asp-for="@Model.Id" />
						<input class="form-control w-100 border-0" name="Body" placeholder="Add a new task"/>
					</form>
				</h5>
			</div>
			<!--Create Task END -->
				
				@if (!Model.Chores.Any())
				{
					<div class="mb-4">
						<span class="text-warning text-danger">There are currently no tasks.</span>
					</div>
				}
				
				<!-- Task Item START-->
				@foreach (var chore in Model.Chores.OrderByDescending( c => c.CreatedDate).ToList())
				{			
					<div class="TASK-ITEM p-2 mb-4 bg-white shadow-sm nunito rounded-3 d-flex align-items-center">
						<div class="TASK-BODY w-100 me-auto">
							<h5 class="text-dark border-start border-3 border-info fs-5 ps-4 details-margin-left">
								<!-- Task Body START-->
								<form asp-controller="chores" asp-action="EditTask">
									<input type="hidden" name="ProjectId" asp-for="@Model.Id" />
									<input type="hidden" name="Id" asp-for="@chore.Id" />
									<input name="Body" class="form-control w-100 border-0 @if(chore.Completed){ @textStrike }" 
									value="@chore.Body" @if(chore.Completed){ @disableInputField }/>
								</form>

								<!-- Task Body END -->
							</h5>
						</div>
						<div class="CHECKBOX ms-2 form-check">		
						<!-- Check Box START -->
							<form asp-controller="Chores" asp-action="EditTask">
								<input type="hidden" name="Id" value="@chore.Id" />
								<input type="hidden" name="Body" value="@chore.Body" />
								<input type="hidden" name="ProjectId" value="@chore.ProjectId" />
								<input name="Completed" class="form-check-input"
								type="checkbox" value="true" onChange="this.form.submit()"
								@if(chore.Completed) { @showCheckMark }

								/>
							</form>			
							<!-- Check Box END-->
						</div>
						<!-- Delete Icon START -->
							<form asp-controller="Chores" asp-action="DeleteTask">
								<input type="hidden" name="id" value="@chore.Id" />
								<input type="hidden" name="MemberId" value="@userManager.GetUserId(User)" />
								<button type="submit" class="btn me-2 px-0 text-danger">
								<svg xmlns="http://www.w3.org/2000/svg" width="19" height="19" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
								<path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"></path><path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"></path>
								</svg>
								</button>
							</form>
						<!-- Delete Icon END -->


					</div>
				}
				<!-- Task Item END -->
				<div class="NOTES-LABEL mb-4">
					<h2 class="me-auto text-black opacity-50 text-uppercase fw-bold fs-6">
						General Notes
					</h2>
				</div>
				
				<!-- General Notes START-->
				<div class="NOTES-CARD card bg-white border-0 shadow-sm rounded-5 my-3">					
					<div class="card-body text-dark">
				<div class="mb-1">
				<!-- Notes START-->
					<form asp-controller="projects" asp-action="UpdateNotes">
						<div asp-validation-summary="ModelOnly" class="text-danger"></div>
						<input type="hidden" asp-for="Id" />
						<input type="hidden" asp-for="Title" />
						<input type="hidden" asp-for="Description" />
						<input type="hidden" name="MemberId" value="@userManager.GetUserId(User)" />
						<textarea name="Notes" class="form-control border-0" rows="3">@Model.Notes</textarea>
						<button type="submit" class="btn btn-info mt-3 text-white">Save</button>
					</form>
				<!-- Notes END -->
				</div>
					</div>
				</div>
				<!-- General Notes END-->

			</div>
			<div class="PROJ-DETAILS col-lg-4 ms-2">
				<div class="card bg-white border-0 shadow-sm rounded-5 my-3">					
					<div class="card-body text-dark">
						<h5 class="card-title mb-4 py-3 pb-1 ps-3 margin-left nunito border-start border-4 border-info">@Model.Title</h5>
						<p class="card-text px-1 text-grey nunito">
							@Model.Description
						</p>
					</div>
				</div>
				@if (displayMessage != "")
				{
					<div class="alert alert-danger alert-dismissible" role="alert">
						<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
						@displayMessage
					</div>
				}
				<div class="ADD-PROJECT-MEMBERS">
					@if (Model.MemberId == userManager.GetUserId(User))
					{
						<!--Add Project Member START -->
						<form asp-controller="projects" asp-action="AddMember">
							<div class="ADD-MEMBERS input-group mb-4 nunito rounded-3 w-100">
								<input type="hidden" name="Id" value="@Model.Id" />
								<input type="hidden" name="Title" value="@Model.Title" />
								<select asp-for="MemberId" class="form-select" asp-items="ViewBag.MembersList"></select>
								<Button type="submit" class="btn btn-info text-white">Add</Button>
							</div>
						</form>
						<!--Add Project Member END -->
					}
				</div>

				<div class="PROJECT-MEMBERS-LABEL mb-2">
					<h2 class="me-auto text-black opacity-50 text-uppercase fw-bold fs-6">
						Project Members
					</h2>
				</div>
				<div class="MEMBER-AVATARS mb-2">
					<div class="row">
						@{
							foreach (var memberX in _context.ProjectMember.Where(p => p.ProjectId == Model.Id).ToList())
							{
								foreach (var item in userManager.Users.Where(m => m.Id == memberX.MemberId))
								{
									<div class="REMOVE-MEMBER dropdown col-3">
										<a class="avatar avatar-sm p-0" id="profileDropdown" role="button" data-bs-auto-close="outside" data-bs-display="static" data-bs-toggle="dropdown">
											<img src="~/uploads/avatars/@item.AvatarUrl" class="rounded-circle avatar m-1" />
										</a>

										@if (Model.MemberId == userManager.GetUserId(User))
										{
											<ul class="dropdown-menu resize-dropdown" aria-labelledby="profileDropdown">
												<form asp-controller="projects" asp-action="RemoveMember">
													<input type="hidden" name="MemberId" value="@item.Id" />
													<input type="hidden" name="Id" value="@Model.Id" />
												<li>
													<button class="dropdown-item text-danger small">
														<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
															<path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
														</svg> Remove
													</button>
												</li>
												</form>
											</ul>
										}

									</div>
								}




							}
						}
					</div>
				</div>

			
			</div>
		</div>
	</div>
	<div class="SIDEBAR col-lg-3">
			<partial name="_ActivityDetails" />
		</div>
</div>